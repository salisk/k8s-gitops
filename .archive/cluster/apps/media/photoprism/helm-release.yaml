---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: photoprism
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 7
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  timeout: 20m
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    image:
      repository: photoprism/photoprism
      tag: 20220121
    env:
      ## See other config options from PhotoPrism documentation: https://docs.photoprism.org/getting-started/config-options/
      PHOTOPRISM_ADMIN_PASSWORD: "${PHOTOPRISM_ADMIN_PASSWORD}"  # Initial admin password
      PHOTOPRISM_ORIGINALS_PATH: "/photoprism/photos/originals"
      PHOTOPRISM_IMPORT_PATH: "/photoprism/photos/import"
      # PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "true"                        # No authentication required (disables password protection)
      # PHOTOPRISM_EXPERIMENTAL: "false"               # Enable experimental features
      PHOTOPRISM_SITE_URL: "https://photos.${SECRET_DOMAIN}/"  # Canonical / public site URL
      PHOTOPRISM_SITE_TITLE: "Nuotraukos"
      PHOTOPRISM_SITE_CAPTION: "Photos"
      PHOTOPRISM_SITE_DESCRIPTION: "List of Photos"
      # PHOTOPRISM_SITE_AUTHOR: ""
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_SERVER: "mariadb.data.svc"
      PHOTOPRISM_DATABASE_PASSWORD: "${PHOTOPRISM_DB_PASSWORD}"
      # # You may optionally set user, group and/or file permissions using environment variables:
      # UID: 1000
      # GID: 1000
      # UMASK: 0000
      PHOTOPRISM_ORIGINALS_LIMIT: 4000 # in MB (default 1000)
    podSecurityContext:
      runAsUser: 0
    probes:
      readiness:
        type: HTTP
        spec:
          httpGet:
            path: /api/v1/status
      liveness:
        type: HTTP
        spec:
          httpGet:
            path: /api/v1/status
    persistence:
      config:
        enabled: true
        mountPath: /photoprism/storage
        existingClaim: photoprism-config-v1
      photos:
        enabled: true
        mountPath: "/photoprism/photos"
        existingClaim: nfs-photos-pvc-v2
    service:
      main:
        ports:
          http:
            port: 2342
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: arcticons:photoprism
          hajimari.io/info: Manage Photos
          hajimari.io/group: media
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
        hosts:
          - host: photos.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - photos.${SECRET_DOMAIN}