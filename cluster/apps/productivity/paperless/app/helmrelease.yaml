---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
  namespace: productivity
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            supplementalGroups:
              - 1000
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.19.3@sha256:321ca858e4b6ce9dc416dbcb7c0691d545e3e9b0f44cf420f75c22098854ca25
            env:
              COMPOSE_PROJECT_NAME: paperless
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              # PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTH_REQUEST_EMAIL
              PAPERLESS_PORT: 8000
              PAPERLESS_DBNAME: paperless
              # PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_WEBSERVER_WORKERS: 2
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_OCR_LANGUAGE: eng+lit
              PAPERLESS_OCR_LANGUAGES: eng lit por
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_DBHOST: postgres-rw.data.svc.cluster.local
              PAPERLESS_DBPASS: ${PAPERLESS_DBPASS}
              PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER}
              PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
              # Redis
              PAPERLESS_REDIS: redis://dragonfly.data.svc.cluster.local:6379
              # Configuration
              PAPERLESS_OCR_USER_ARGS: |-
                {"invalidate_digital_signatures"}: true
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /usr/src/paperless/consume
              PAPERLESS_DATA_DIR: /data
              PAPERLESS_EXPORT_DIR: /usr/src/paperless/export
              PAPERLESS_MEDIA_ROOT: /usr/src/paperless/media
              PAPERLESS_PRE_CONSUME_SCRIPT: /usr/src/paperless/scripts/pdfpassword.py
              # Configure user permissions
              USERMAP_GID: "1000"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 25m
                memory: 2Gi
              limits:
                memory: 6Gi
      # redis:
      #   containers:
      #     redis:
      #       image:
      #         repository: ghcr.io/valkey-io/valkey
      #         tag: 8.1.3
      #       resources:
      #         requests:
      #           cpu: 5m
      #           memory: 32Mi
      #         limits:
      #           memory: 128Mi
    service:
      app:
        forceRename: paperless
        primary: true
        controller: paperless
        ports:
          http:
            port: &port 8000
      # redis:
      #   controller: redis
      #   ports:
      #     http:
      #       port: 6379
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        enabled: true
        existingClaim: paperless-config-v1
      scripts:
        enabled: true
        type: configMap
        name: paperless-scripts
        defaultMode: 0775
        globalMounts:
          - path: /usr/src/paperless/scripts/pdfpassword.py
            subPath: pdfpassword.py
      pdfpasswords:
        enabled: true
        type: configMap
        name: pdf-passwords
        defaultMode: 0775
        globalMounts:
          - path: /usr/src/paperless/scripts/passwords.txt
            subPath: passwords.txt
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /volume1/documents/paperless/media
        globalMounts:
          - path: /usr/src/paperless/media
      consume:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /volume1/documents/paperless/consume
        globalMounts:
          - path: /usr/src/paperless/consume
      export:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /volume1/documents/paperless/export
        globalMounts:
          - path: /usr/src/paperless/export
      nfs-data:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /volume1/documents/paperless/data
        globalMounts:
          - path: /usr/src/paperless/data
