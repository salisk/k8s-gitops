---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 15.5
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.11.2724@sha256:371517bc99a5c755bea0c73e8e9fcd23ae436a593fb4a116368947c9c9182977
            env:
              TZ: "${TIMEZONE}"
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 4
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 0
            supplementalGroups:
              - 100
              - 10000
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Sonarr
          gethomepage.dev/description: TV Show Downloader
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.media
          gethomepage.dev/widget.key: "${HOMEPAGE_SONARR_KEY}"
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
            secretName: "sonarr-tls"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        existingClaim: nfs-media-pvc-v2
