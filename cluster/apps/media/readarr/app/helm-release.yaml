---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name readarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-labs
        namespace: flux-system
      interval: 30m
  targetNamespace: media
  install:
    createNamespace: true
    remediation:
      retries: 10
  upgrade:
    remediation:
      retries: 10
  values:
    fullnameOverride: *name
    defaultPodOptions:
      hostname: *name
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: readarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/joryirving/readarr-develop
              tag: 0.4.12.2753@sha256:2d2577d3c27d8892d8d886a3dcd58215b20402aee320da4914dfbd5db373cab4
            env:
              TZ: "${TIMEZONE}"
              READARR__AUTH__METHOD: External
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              READARR__AUTH__APIKEY: "${READARR_API_KEY}"
              # https://github.com/Readarr/Readarr/issues/3453
              READARR__LOG__DBENABLED: "False"
              READARR__LOG__LEVEL: info
              READARR__POSTGRES__HOST: &dbHost postgres-rw.data.svc.cluster.local
              READARR__POSTGRES__PORT: "5432"
              READARR__POSTGRES__USER: &dbUser "${READARR_POSTGRES_USER}"
              READARR__POSTGRES__PASSWORD: &dbPass "${READARR_POSTGRES_PASSWORD}"
              READARR__POSTGRES__MAIN_DB: readarr_main
              READARR__POSTGRES__LOG_DB: readarr_log
              READARR__POSTGRES__CACHE_DB: readarr_cache
            securityContext:
              allowPrivilegeEscalation: false
              # System.IO.IOException: Read-only file system
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            # envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 8787
                  initialDelaySeconds: 50
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 200Mi
              limits:
                memory: 400Mi
    service:
      main:
        ports:
          http:
            port: 8787
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Readarr
          gethomepage.dev/description: Books Downloader
          gethomepage.dev/icon: readarr.png
          gethomepage.dev/widget.type: readarr
          gethomepage.dev/widget.url: http://readarr.media:8787
          gethomepage.dev/widget.key: "${HOMEPAGE_READARR_KEY}"
        hosts:
          - host: &host "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: readarr
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-v1
      media:
        enabled: true
        existingClaim: nfs-media-pvc-v2
        globalMounts:
          - path: /media
