---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 5
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  timeout: 20m
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 0
            supplementalGroups:
              - 44
              - 109
              - 100
              - 107
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.1.10060@sha256:04563be281364ba2462285aacb2ca13d7ef7e1d0b19e1203f4c19b4a56840c5c
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://${LB_PLEX_IP}:32400
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 1000m
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
                memory: 6Gi
    service:
      app:
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "${LB_PLEX_IP}"
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "movie"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Plex
          gethomepage.dev/description: Movies and TV Shows
          gethomepage.dev/icon: plex.png
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1
        globalMounts:
          - path: /config
      media:
        enabled: true
        existingClaim: nfs-media-pvc-v2
        globalMounts:
          - path: /media
      tmpfs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
                subPath: logs
              - path: /transcode
                subPath: transcode
              - path: /tmp
                subPath: tmp
