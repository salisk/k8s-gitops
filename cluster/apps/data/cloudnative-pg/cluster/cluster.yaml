---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: data
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:15.2
  enableSuperuserAccess: true
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 30Gi
    storageClass: longhorn
  superuserSecret:
    name: cloudnative-pg-secret
  # bootstrap:
  #   initdb:
  #     import:
  #       type: monolith
  #       databases:
  #         - "*"
  #       roles:
  #         - "*"
  #       source:
  #         externalCluster: bitnami-pg
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 60d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: http://minio.default:9000
      serverName: postgres-v15
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: bitnami-pg
      connectionParameters:
        host: postgresql.data.svc
        user: postgres
        dbname: postgres
      password:
        name: cloudnative-pg-secret
        key: bitnami-password
