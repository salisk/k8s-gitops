---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 44.3.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    server:
      resources:
        requests:
          memory: 500Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResource: true
      admissionWebhooks:
        enabled: false
      prometheusConfigReloader:
        resources:
          limits:
            cpu: 200m
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 10Gi
      ingress:
        enabled: true
        pathType: ImplementationSpecific
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts: 
        - "alertmanager.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "alertmanager.${SECRET_DOMAIN}"
          secretName: alertmanager-tls
      config:
        global:
          resolve_timeout: 5m
    nodeExporter:
      serviceMonitor:
        relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: instance
          action: replace
    grafana:
      enabled: false
    kubeApiServer:
      enabled: true
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    prometheus-node-exporter:
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: instance
    prometheus:
      ingress:
        enabled: true
        pathType: ImplementationSpecific
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
        - "prometheus.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "prometheus.${SECRET_DOMAIN}"
          secretName: prometheus-tls
      prometheusSpec:
        replicas: 2
        replicaExternalLabelName: "replica"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.30.2@sha256:6b97f63c716781c487da88750850cf5a4e0a1c23af32764e97faefc1383432b1
          version: v0.17.0
          objectStorageConfig:
            name: thanos
            key: objstore.yaml