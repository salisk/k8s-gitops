---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.61.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  maxHistory: 5
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  timeout: 20m
  values:
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # Delete the default Loki that comes OOTB to avoid datasource contention
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query:9090/
            isDefault: false
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        node-exporter-full:
          gnetId: 1860
          revision: 23
          datasource: Prometheus
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        lidarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/lidarr.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/overview.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/compact.json
          datasource: Prometheus
        thanos-querier:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/query.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/store.json
          datasource: Prometheus
        thanos-receiver:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/receive.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/sidecar.json
          datasource: Prometheus
        thanos-ruler:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/rule.json
          datasource: Prometheus
        thanos-replicate:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/bucket-replicate.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
          secretName: grafana-tls
    serviceAccount:
      create: true
      autoMount: true
    initChownData:
      enabled: true
    persistence:
      enabled: true
      storageClassName: "longhorn"
      size: 10Gi
      accessModes:
      - ReadWriteMany
